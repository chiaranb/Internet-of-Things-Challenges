[{"id":"4fde9f2160b4fa1f","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"e7b94f4d674a2a90","type":"inject","z":"4fde9f2160b4fa1f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":140,"wires":[["dd574a3e33919d0e","b91d40f4fafa52e4"]]},{"id":"b91d40f4fafa52e4","type":"file in","z":"4fde9f2160b4fa1f","name":"read csv","filename":"/data/challenge3.csv","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":380,"y":200,"wires":[["86509a633b626cbf"]]},{"id":"86509a633b626cbf","type":"csv","z":"4fde9f2160b4fa1f","name":"","spec":"","sep":",","hdrin":true,"hdrout":"none","multi":"mult","ret":"\\n","temp":"","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":590,"y":200,"wires":[["870acb47817b436d"]]},{"id":"870acb47817b436d","type":"function","z":"4fde9f2160b4fa1f","name":"csvInput","func":"// Save input csv\nflow.set(\"input\", msg.payload);\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":200,"wires":[["6786350767f5e02e"]]},{"id":"dd574a3e33919d0e","type":"function","z":"4fde9f2160b4fa1f","name":"Initialization","func":"msg.payload = \"\";\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"// Set initial global status\nglobal.set(\"Status\", 0);","finalize":"","libs":[],"x":390,"y":80,"wires":[["f11385c5434741c2","da8551669d6ea5ee","7256bc05c3b10e42"]]},{"id":"f11385c5434741c2","type":"file","z":"4fde9f2160b4fa1f","name":"filtered_pubs.csv","filename":"./filtered_pubs.csv","filenameType":"str","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":630,"y":80,"wires":[[]]},{"id":"9386fd1557da6d2c","type":"inject","z":"4fde9f2160b4fa1f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"5","crontab":"","once":true,"onceDelay":"0.3","topic":"","payload":"","payloadType":"date","x":170,"y":360,"wires":[["1b5eb6733078ed4e"]]},{"id":"1b5eb6733078ed4e","type":"function","z":"4fde9f2160b4fa1f","name":"IDGenerator","func":"if (global.get(\"Status\")===1) return null;\n\nvar randomNumber = Math.round(Math.random() * 30000);\n\nmsg.payload = {\n    id: randomNumber,\n    timestamp: msg.payload,\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":360,"wires":[["56e784a5aacd9136","1ae33f8d880ed923"]]},{"id":"56e784a5aacd9136","type":"function","z":"4fde9f2160b4fa1f","name":"CreatePayload CSV","func":"var rowCount = context.get(\"rowCount\");\nrowCount++;\ncontext.set(\"rowCount\", rowCount);\n\nmsg.payload = {\n    \"No.\": rowCount,\n    \"ID\": msg.payload.id,\n    \"TIMESTAMP\": msg.payload.timestamp,\n};\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"if (context.get(\"rowCount\") === undefined) {\n    context.set(\"rowCount\", 0)\n}","finalize":"","libs":[],"x":580,"y":300,"wires":[["0733c577da50bc6d"]]},{"id":"1ae33f8d880ed923","type":"function","z":"4fde9f2160b4fa1f","name":"CreatePayload MQTT Publish","func":"msg.payload = JSON.stringify(msg.payload);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":420,"wires":[["a423d8e8fa91bf36","be7c4618c1f242f3"]]},{"id":"0733c577da50bc6d","type":"csv","z":"4fde9f2160b4fa1f","name":"id_log csv","spec":"","sep":",","hdrin":"","hdrout":"once","multi":"one","ret":"\\n","temp":"No.,ID,TIMESTAMP","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":780,"y":300,"wires":[["b96adae37ab5b18a"]]},{"id":"b96adae37ab5b18a","type":"file","z":"4fde9f2160b4fa1f","name":"id_log.csv","filename":"./id_log.csv","filenameType":"str","appendNewline":false,"createDir":false,"overwriteFile":"false","encoding":"none","x":920,"y":300,"wires":[["e7c81da1c011ace2"]]},{"id":"a423d8e8fa91bf36","type":"mqtt out","z":"4fde9f2160b4fa1f","name":"publish","topic":"challenge3/id_generator","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"62d3eb596440dae1","x":900,"y":420,"wires":[]},{"id":"c0df673e17eb5def","type":"mqtt in","z":"4fde9f2160b4fa1f","name":"subscribe","topic":"challenge3/id_generator","qos":"2","datatype":"auto-detect","broker":"62d3eb596440dae1","nl":false,"rap":true,"rh":0,"inputs":0,"x":140,"y":680,"wires":[["38b22a50866fb3ea"]]},{"id":"38b22a50866fb3ea","type":"function","z":"4fde9f2160b4fa1f","name":"Parse msg","func":"// Update the packet counter from context\nlet packetCounter = context.get(\"packetCounter\");\npacketCounter += 1;\ncontext.set(\"packetCounter\", packetCounter);\n\n// Bypass further processing after 80 packets\nif (packetCounter > 80) {\n    node.warn(\"Processed 80 packtes\");\n    global.set(\"Status\", 1);\n    return null;\n}\n\n// Retrieve the input CSV array\nvar input = flow.get(\"input\");\n\n// Store the Publish payload\nflow.set(\"publishMessage\", msg.payload);\n\n// node.warn(\"ID \" + msg.payload.id);\n\n// Compute the row index using modulo operation\nvar remainder = msg.payload.id % 7711;\n\nnode.warn(\"Remainder \" + remainder);\n\n// Retrieve the input row from CSV array\nvar inputRow = input[remainder - 1];\n\n// Store the selected row of CSV input\nflow.set(\"inputRow\", inputRow);\n\n// Initialize message type\nmsg.type = \"\";\n\n// Determine the message type based on content\nconst info = inputRow[\"Info\"];\n\nif (info.includes(\"Publish Message\")) {\n    msg.type = \"PUBLISH\";\n    return msg;\n}\n\nif (info.includes(\"Ack\")) {\n    msg.type = \"ACK\";\n    return msg;\n}\n\n// If no known type matched but still within packet limit\nnode.warn(\"Skipped\");\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"// Initialize packet counter\nif (context.get(\"packetCounter\") === undefined) {\n    context.set(\"packetCounter\", 0)\n}","finalize":"","libs":[],"x":370,"y":680,"wires":[["a66ed41b032cd0cb","51d0a5308b014979"]]},{"id":"a66ed41b032cd0cb","type":"switch","z":"4fde9f2160b4fa1f","name":"","property":"type","propertyType":"msg","rules":[{"t":"eq","v":"PUBLISH","vt":"str"},{"t":"eq","v":"ACK","vt":"str"}],"checkall":"false","repair":false,"outputs":2,"x":610,"y":680,"wires":[["d0937cae7961001b"],["1d35408f68e50d7f"]]},{"id":"d0937cae7961001b","type":"function","z":"4fde9f2160b4fa1f","name":"MQTT","func":"// Retrieve stored publish message and input row from flow\nlet publishMessage = flow.get(\"publishMessage\");\nlet inputRow = flow.get(\"inputRow\");\n\n// Extract all topics from the Info field\nlet infoField = inputRow[\"Info\"];\nlet topics = [];\nlet regex = /\\[([^\\]]+)\\]/g;\nlet match;\n\nwhile ((match = regex.exec(infoField)) !== null) {\n    topics.push(match[1]);\n}\n\nmsg.topic = topics;\n\n// Get the raw payload string\nlet raw = inputRow[\"Payload\"];\n\nif (raw !== undefined) {\n    // Parse individual JSON objects from raw string\n    var payloadChunks = [];\n    let current = \"\";\n    let depth = 0;\n    let inString = false;\n    let collecting = false;\n\n    for (let i = 0; i < raw.length; i++) {\n        let char = raw[i];\n\n        // Toggle inString when encountering unescaped quotes\n        if (char === '\"' && raw[i - 1] !== '\\\\') {\n            inString = !inString;\n        }\n\n        if (!inString) {\n            if (char === '{') {\n                if (depth === 0) collecting = true; // Start collecting a new object\n                depth++;\n            } else if (char === '}') {\n                depth--;\n            }\n        }\n\n        if (collecting) {\n            current += char;\n        }\n\n        // End of a complete object\n        if (collecting && depth === 0) {\n            payloadChunks.push(current.trim());\n            current = \"\";\n            collecting = false;\n        }\n    }\n\n\n    // Parse each chunk into JSON or null if malformed\n    let payloadArray = payloadChunks.map(chunk => {\n        try {\n            return JSON.parse(chunk);\n        } catch (e) {\n            return null;\n        }\n    });\n\n\n    // Build result array\n    let maxLength = Math.max(topics.length, payloadArray.length);\n    var result = [];\n\n    for (let i = 0; i < maxLength; i++) {\n        result.push({\n            timestamp: Date.now(),\n            id: publishMessage.id,\n            topic: topics[i] || null,\n            payload: payloadArray[i] || \"{}\"\n        });\n    }\n\n    // Set msg.payload as array\n    msg.payload = result;   \n} else {\n    for (let i = 0; i < topics.length; i++) {\n        msg = {\n            timestamp: Date.now(),\n            id: publishMessage.id,\n            topic: topics[i] || null,\n            payload: \"{}\"\n        }\n    }\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":640,"wires":[["43589e88d38672a0","76c2820217c4fe7f"]]},{"id":"1d35408f68e50d7f","type":"function","z":"4fde9f2160b4fa1f","name":"ACK msg","func":"// Retrieve previously stored data from flow context\nlet publishMessage = flow.get(\"publishMessage\");\nlet inputRow = flow.get(\"inputRow\");\n\nvar rowCountACK = context.get(\"rowCountACK\");\nrowCountACK++;\ncontext.set(\"rowCountACK\", rowCountACK);\n\n// Construct payload for CSV output\nmsg.payload = {\n    \"No.\": rowCountACK,\n    TIMESTAMP: Date.now(),\n    SUB_ID: publishMessage.id,\n    MSG_TYPE: inputRow[\"Info\"]\n};\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"if (context.get(\"rowCountACK\") === undefined) {\n    context.set(\"rowCountACK\", 0)\n}","finalize":"","libs":[],"x":800,"y":880,"wires":[["85b7637073b3bc81"]]},{"id":"85b7637073b3bc81","type":"csv","z":"4fde9f2160b4fa1f","name":"ack csv","spec":"","sep":",","hdrin":"","hdrout":"once","multi":"one","ret":"\\n","temp":"No.,TIMESTAMP, SUB_ID, MSG_TYPE ","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":960,"y":880,"wires":[["d4295dab4737ca34"]]},{"id":"43589e88d38672a0","type":"split","z":"4fde9f2160b4fa1f","name":"","splt":"","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","property":"payload","x":1010,"y":640,"wires":[["6a840d4a1dda40ad","bb9980cfb7c3580a"]]},{"id":"b14e3ff9e4ccf1bb","type":"delay","z":"4fde9f2160b4fa1f","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"4","nbRateUnits":"1","rateUnits":"minute","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":1460,"y":640,"wires":[["9b67d2ec69ec4c81","e9ba72bbd01f2c97"]]},{"id":"21af938f09c65474","type":"function","z":"4fde9f2160b4fa1f","name":"ThinkSpeak Rqst","func":"var apiKey = \"LAWGNK69EQ5JVH1C\";\n\n// Increase ACK counter\nvar ackCounter = context.get(\"ackCounter\");\nackCounter++;\ncontext.set(\"ackCounter\", ackCounter);\n\nmsg.url = \"https://api.thingspeak.com/update?api_key=\"\nmsg.url += apiKey;\nmsg.url += \"&field1=\"\nmsg.url += ackCounter;\n\n// node.warn(msg.url)\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"// Initialize ACK packet counter\nif (context.get(\"ackCounter\") === undefined) {\n    context.set(\"ackCounter\", 0)\n}","finalize":"","libs":[],"x":1330,"y":880,"wires":[["e018d99e61505932"]]},{"id":"e018d99e61505932","type":"http request","z":"4fde9f2160b4fa1f","name":"","method":"GET","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":1530,"y":880,"wires":[[]]},{"id":"e9ba72bbd01f2c97","type":"mqtt out","z":"4fde9f2160b4fa1f","name":"publish broker","topic":"","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"62d3eb596440dae1","x":1680,"y":700,"wires":[]},{"id":"9b67d2ec69ec4c81","type":"function","z":"4fde9f2160b4fa1f","name":"Filter msg","func":"if (msg.payload === \"{}\") {\n    return null;\n}\n\nlet inner = msg.payload.payload;\n//node.warn(inner);\n\n// Filter: Only temperature messages in Fahrenheit\nif (inner === null || inner.type !== \"temperature\" || inner.unit !== \"F\") {\n    return null;\n}\n\n// Extract mean value from the range array\nif (!Array.isArray(inner.range) || inner.range.length !== 2) {\n    node.warn(\"Invalid range format\");\n    return null;\n}\n\nnode.warn(\"Fahrenheit Temperature found\");\n\nlet meanValue = (inner.range[0] + inner.range[1]) / 2;\n\nvar rowCountFiltered = context.get(\"rowCountFiltered\");\nrowCountFiltered++;\ncontext.set(\"rowCountFiltered\", rowCountFiltered);\n\n// Construct payload for CSV output\nmsg.payload = {\n    \"No.\": rowCountFiltered,\n    LONG: inner.long,\n    LAT: inner.lat, \n    MEAN_VALUE: meanValue, \n    TYPE: inner.type, \n    UNIT: inner.unit,\n    DESCRIPTION: inner.description\n};\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"if (context.get(\"rowCountFiltered\") === undefined) {\n    context.set(\"rowCountFiltered\", 0)\n}","finalize":"","libs":[],"x":1660,"y":600,"wires":[["6684e4dc527cdc5f","eb30f6a775f00ff0"]]},{"id":"da8551669d6ea5ee","type":"file","z":"4fde9f2160b4fa1f","name":"ack_log.csv","filename":"./ack_log.csv","filenameType":"str","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":610,"y":140,"wires":[[]]},{"id":"d4295dab4737ca34","type":"file","z":"4fde9f2160b4fa1f","name":"ack_log.csv","filename":"./ack_log.csv","filenameType":"str","appendNewline":false,"createDir":false,"overwriteFile":"false","encoding":"none","x":1130,"y":880,"wires":[["21af938f09c65474","5427695b5577f2ed"]]},{"id":"6786350767f5e02e","type":"debug","z":"4fde9f2160b4fa1f","name":"debug csvInput","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":200,"wires":[]},{"id":"e7c81da1c011ace2","type":"debug","z":"4fde9f2160b4fa1f","name":"debug id_log.csv","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1110,"y":300,"wires":[]},{"id":"51d0a5308b014979","type":"debug","z":"4fde9f2160b4fa1f","name":"debug Parse msg","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":550,"y":780,"wires":[]},{"id":"be7c4618c1f242f3","type":"debug","z":"4fde9f2160b4fa1f","name":"debug CreatePayload MQTT Publish","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":990,"y":480,"wires":[]},{"id":"5427695b5577f2ed","type":"debug","z":"4fde9f2160b4fa1f","name":"debug ack_log.csv","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1330,"y":940,"wires":[]},{"id":"6684e4dc527cdc5f","type":"csv","z":"4fde9f2160b4fa1f","name":"filtered_pubs csv","spec":"","sep":",","hdrin":false,"hdrout":"once","multi":"one","ret":"\\n","temp":"No.,LONG, LAT, MEAN_VALUE, TYPE, UNIT, DESCRIPTION ","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":1870,"y":640,"wires":[["eb1907aee24916c6"]]},{"id":"6a840d4a1dda40ad","type":"debug","z":"4fde9f2160b4fa1f","name":"debug split","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1050,"y":760,"wires":[]},{"id":"eb1907aee24916c6","type":"file","z":"4fde9f2160b4fa1f","name":"filtered_pubs.csv","filename":"./filtered_pubs.csv","filenameType":"str","appendNewline":false,"createDir":false,"overwriteFile":"false","encoding":"none","x":2090,"y":640,"wires":[["8b14ce974cb47c53"]]},{"id":"8b14ce974cb47c53","type":"debug","z":"4fde9f2160b4fa1f","name":"debug filtered_pubs","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":2200,"y":700,"wires":[]},{"id":"eb30f6a775f00ff0","type":"function","z":"4fde9f2160b4fa1f","name":"PlotChart","func":"if (msg !== null) {\n    msg.topic = \"\";\n    msg.payload = msg.payload[\"MEAN_VALUE\"];\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1840,"y":560,"wires":[["9e62af0adb70708a"]]},{"id":"230f41f0b7f7492f","type":"debug","z":"4fde9f2160b4fa1f","name":"debug Create MQTT msg","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1310,"y":760,"wires":[]},{"id":"76c2820217c4fe7f","type":"debug","z":"4fde9f2160b4fa1f","name":"debug MQTT","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":830,"y":760,"wires":[]},{"id":"bb9980cfb7c3580a","type":"function","z":"4fde9f2160b4fa1f","name":"Create MQTT msg","func":"if (msg.payload === \"{}\") {\n    msg.topic = msg.topic;\n    return msg;\n}\nmsg.topic = msg.payload.topic;\n\nmsg.payload = {\n    timestamp: new Date().toISOString(),\n    id: msg.payload.id,\n    topic: msg.payload.topic,\n    payload: msg.payload.payload\n}\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":640,"wires":[["b14e3ff9e4ccf1bb","230f41f0b7f7492f"]]},{"id":"f927e83262d1cf51","type":"inject","z":"4fde9f2160b4fa1f","name":"Reset chart","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"[]","payloadType":"json","x":1950,"y":480,"wires":[["9e62af0adb70708a"]]},{"id":"9e62af0adb70708a","type":"ui_chart","z":"4fde9f2160b4fa1f","name":"","group":"b012cf51fd464f0f","order":0,"width":0,"height":0,"label":"chart","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":true,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":true,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"outputs":1,"useDifferentColor":false,"className":"","x":2030,"y":560,"wires":[[]]},{"id":"7256bc05c3b10e42","type":"file","z":"4fde9f2160b4fa1f","name":"id_log.csv","filename":"./id_log.csv","filenameType":"str","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":600,"y":20,"wires":[[]]},{"id":"62d3eb596440dae1","type":"mqtt-broker","name":"","broker":"localhost","port":"1884","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"msg.payload","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"b012cf51fd464f0f","type":"ui_group","name":"dashboard","tab":"0ac55a66e3baff51","order":1,"disp":true,"width":6,"collapse":false,"className":""},{"id":"0ac55a66e3baff51","type":"ui_tab","name":"Home","icon":"dashboard","disabled":false,"hidden":false}]